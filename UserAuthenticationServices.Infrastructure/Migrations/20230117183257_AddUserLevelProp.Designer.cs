// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserAuthenticationServices.Infrastructure;

#nullable disable

namespace UserAuthenticationServices.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230117183257_AddUserLevelProp")]
    partial class AddUserLevelProp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserAuthenticationServices.Domain.Entity.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserAuthenticationServices.Domain.Entity.UserAuthentication", b =>
                {
                    b.Property<Guid>("AuthenticationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("AuthenticationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAuthentications");
                });

            modelBuilder.Entity("UserAuthenticationServices.Domain.Entity.UserSessions", b =>
                {
                    b.Property<Guid>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OpenedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("UserAuthenticationServices.Domain.Entity.UserAuthentication", b =>
                {
                    b.HasOne("UserAuthenticationServices.Domain.Entity.User", "User")
                        .WithMany("UserAuthentication")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserAuthenticationServices.Domain.Entity.UserSessions", b =>
                {
                    b.HasOne("UserAuthenticationServices.Domain.Entity.User", "User")
                        .WithMany("UserSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserAuthenticationServices.Domain.Entity.User", b =>
                {
                    b.Navigation("UserAuthentication");

                    b.Navigation("UserSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
